using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace IRIS.Law.WebApp.UserControls
{
    public partial class CalendarControl : System.Web.UI.UserControl
    {
        #region Properties

        #region InvalidValueMessage
        public string InvalidValueMessage
        {
            set
            {
                _mevDate.InvalidValueMessage = value;
                _rfvDate.ErrorMessage = value;
            }
        }
        #endregion

        #region DateText
        public string DateText
        {
            get { return _txtDate.Text; }
            set { _txtDate.Text = value; }
        }
        #endregion

        #region Enabled
        public bool Enabled
        {
            set 
            { 
                _txtDate.Enabled = value;
                _ceDate.Enabled = value;
                _imgBtnDate.Visible = value;
            }
            get
            {
                return _txtDate.Enabled;
            }
        }
        #endregion

        #region DateTextBoxUniqueID
        public string DateTextBoxUniqueID
        {
            get { return _txtDate.UniqueID; }
        }
        #endregion

        #region DateTextBoxClientID
        public string DateTextBoxClientID
        {
            get { return _txtDate.ClientID; }
        }
        #endregion

        #region EnableValidation
        /// <summary>
        /// Gets or sets a value indicating whether the client field is mandatory
        /// </summary>
        /// <value><c>true</c> if mandatory; otherwise, <c>false</c>.</value>
        public bool EnableValidation { get; set; }
        #endregion
        
        #region Validation Group

		public string ValidationGroup
		{
			get { return _mevDate.ValidationGroup; }
			set { _mevDate.ValidationGroup = value; }
		}

		#endregion

        #endregion

        #region public Events

        public delegate void DateChangedEventHandler(object sender, EventArgs e);
        /// <summary>
        /// Occurs when the client reference changes.
        /// </summary>
        public event DateChangedEventHandler DateChanged;
        
        protected virtual void OnDateChanged(EventArgs e)
        {
            if (DateChanged != null)
            {
                DateChanged(this, e);
            }
        }

        #endregion

        #region Page Load
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                if (EnableValidation == true)
                {
                    _pnlValidation.Visible = true;
                    //_mevDate.InvalidValueMessage = string.Empty;
                }
                if (DateChanged != null)
                {
                    _txtDate.AutoPostBack = true;                    
                }

                
            }

            _txtDate.Attributes.Add("onchange", "dateComplete('" + _txtDate.ClientID + "');");
        }
        #endregion

        #region Date Text Changed
        /// <summary>
        /// On Change of UFN Date or Fee Earner, the UFN Number will be autogenerated
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void _txtDate_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (DateChanged != null)
                {
                    OnDateChanged(e);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

        #region Focus
        public override void Focus()
        {
            _txtDate.Focus();
        }
        #endregion
    }
}